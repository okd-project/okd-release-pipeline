---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: mirror-release
spec:
  params:
    - description: The release name to target
      name: release-name
      type: string
    - description: The release pullspec to target
      name: release-pullspec
      type: string
    - description: The image push secret name to use
      name: image-push-secret-name
      type: string
      default: zzlotnik-okdpipelinepush-pull-secret
    - description: The URL for the GPG public key to use for verification
      name: gpg-public-key-url
      type: string
      default: "https://raw.githubusercontent.com/openshift/cluster-update-keys/master/keys/verifier-public-key-openshift-ci-4"
    - description: The content mirror destination
      name: content-mirror-pushspec
      type: string
    - description: The release mirror destination
      name: release-mirror-pushspec
      type: string
  results:
    - name: mirrored-pullspec
  steps:
    - image: "quay.io/okd/tekton-worker:latest"
      name: "mirror-release-to-quay"
      script: |
        #!/usr/bin/env bash
        set -euxo pipefail

        RELEASE="$(params.release-pullspec)"
        RELEASE_NAME="$(params.release-name)"

        CONTENT_MIRROR="$(params.content-mirror-pushspec):${RELEASE_NAME}"
        RELEASE_MIRROR="$(params.release-mirror-pushspec):${RELEASE_NAME}"

        # Import the public key for verification
        curl -Lv "$(params.gpg-public-key-url)" | gpg --import

        oc adm release new \
          --request-timeout=60s \
          --registry-config="/secret/image-push-secret/.dockerconfigjson" \
          --from-release "$RELEASE" \
          --mirror "$(params.content-mirror-pushspec)" \
          --to-image "$RELEASE_MIRROR" \
          --name="$RELEASE_NAME" \
          --keep-manifest-list=true
          

        printf "%s" "$RELEASE_MIRROR" > $(results.mirrored-pullspec.path)
      volumeMounts:
        - name: "image-push-secret"
          mountPath: /secret/image-push-secret
  volumes:
    - name: "image-push-secret"
      secret:
        secretName: "$(params.image-push-secret-name)"
